* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background: #f2f2f2;
  font-family: Arial, Helvetica, sans-serif;
}

.contenedor {
  background: #212d40;
  height: 500px;
  max-width: 700px;
  width: 80%;

  /* Propiedades contenedor padre */
  /* align-items: center; */
  /* align-content: flex-start; */
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.caja {
  background: #f79256;
  color: white;
  font-size: 40px;
  height: 100px;
  margin: 20px;
  padding: 20px;
  text-align: center;
  width: 100px;

  flex: 1 1 auto;
  /* order: 1; */
  /* flex-grow: 1;
  flex-shrink: 1;
  flex-basis: auto; */
}

.dos {
  align-self: stretch;
  height: auto;
}

/*
  Flexbox es un conjunto de propiedades que nos permiten distribuir nuestros elementos de una forma flexible para mejores layouts / plantillas o dise単os mas facilmente

  Para utilizar flexbox necesitamos un contenedor padre que tenga elementos hijos. Ya que a estos son los que se haran flexiblex.

  Flexbox se divide en 2 grupos de propiedades:
    - Propiedades para los elementos padre
    - Propiedades para los elementos hijo

  =================================
  Propiedades del contenedor padre:
  =================================

  - display:flex;
    Nos permite habilitar que los elementos hijos sean flexibles

  - flex-direction:;
    row | row-reverse | column | column-reverse

  - flex-wrap:;
    no-wrap | wrap | wrap-reverse

  - flex-flow: <flex-direction> <flex-wrap>;
    Es un atajo de flex-direction y flex-wrap.

  - justify-content:;
    flex-start | flex-end | center | space-between | space-around

  - align-items:;
    flex-start | flex-end | center | stretch | baseline

  - align-content:;
    IMPORTANTE: Esta propiedad solo funciona cuando hay mas de una linea de elementos.

    flex-start | flex-end | center | stretch | space-between | space-around


  =================================
  Propiedades de los elementos hijo
  =================================

  - order:;

  - flex-grow:;
    Acepta un numero que servira de proporcion para hacer crecer el elemento en relacion a los otros.

    Si todos los elementos tienen flex-grow 1 el espacio restante se distribuira entre los elementos.

  - flex-shrink:;
    Define la habilidad de un elemento para hacerse mas peque単o.

    Por defecto todos se pueden hacer mas peque単os pero si le ponemos flex-shrink 0 el elemento no podra ser mas peque単o que su ancho especificado.

  - flex-basis:;
    Nos permite especificar el valor inicial que tendra un elemento.

  - flex:1 1 auto;
    Es un atajo para flex-grow, flex-shrink y flex-basis

  - align-self:;
    auto | flex-start | flex-end | center | baseline | stretch;
*/